title:: News in 3.5
summary:: A summary of news in SC 3.5
categories:: News

SECTION:: Language-side news

subsection:: Qt GUI
A new cross-platform and custom styled GUI system that replaces Cocoa and SwingOSC.

subsection:: SCDoc
A new help-system provides consistent documentation with good introspection and easy link::Search##searching:: and link::Browse##browsing::.

The help-files are written in a markup language which is then parsed and used to generate HTML files, which are displayed with the new link::Classes/WebView:: widget inside the link::Classes/HelpBrowser::.

See link::Classes/SCDoc::, link::Reference/SCDocSyntax::, link::Guides/WritingHelp::.

Also a new method link::Classes/Help#*methodArgs:: returns a human-readable string of arguments and default values for a method. Example: code::Help.methodArgs("SinOsc.ar")::

subsection:: OSC and MIDI responders
The new link::Classes/OSCFunc:: and link::Classes/MIDIFunc:: provides better alternatives to the old link::Classes/OSCresponderNode:: and link::Classes/NoteOnResponder::, etc.

OSCFunc can receive on any port, not only the main code::NetAddr.langPort::.

subsection:: New Location of Startup file

The sclang startup file has moved to code:: thisProcess.platform.userConfigDir +/+ "sclang.scd" :: . Old
platform-specific startup file locations have been deprecated. The new startup file is plain-text, rtf is not supported.

subsection:: Language configuration files

The linux-only library configuration file has been deprecated. It is replaced by a cross-platform language configuration
file, which is located at code::Platform.userConfigDir +/+ "sclang_conf.yaml" :: . It can be configured via the
link::Classes/LanguageConfig:: class.

subsection:: Sced3
The GEdit plugin sced has been updated to support GEdit version 3.

subsection:: WiiMote
code::WiiMote.discover:: now returns the device object, or nil if it failed.

subsection:: Bus-asMap in patterns
Bus-asMap symbols are now allowed in code::\freq:: and friends in patterns.

subsection:: Warn on classlib overwrites
Warnings are posted when extensions overwrites methods in main class lib, unless the extensions are put in a subfolder named "SystemOverwrites".

subsection:: Filesystem utils
New cross-platform filesystem utilities: link::Classes/File#*copy::, link::Classes/File#*mtime::, link::Classes/File#*mkdir::, link::Classes/File#*realpath::, link::Classes/File#*type::, link::Classes/File#*fileSize::

subsection:: String-openTextFile
link::Classes/String#-openTextFile:: now works also on frontends without link::Classes/Document:: support. It falls back to link::Classes/String#-openOS:: to open the file with the default application for that file type.

subsection:: Various bugfixes
A lot of bugs has been fixed, for example: String regexp primitives, multichannel wrappers of SequenceableCollection, CoinGate.ar, T2K, WiiMote, SynthDesc.

subsection:: Interpreter Performance Improvements

The sclang now uses token threading footnote::http://www.complang.tuwien.ac.at/forth/threaded-code.html:: instead of one huge switch statement for bytecode dispatching.

subsection:: UI deprecated

The UI class has been deprecated. Its functionality is now provided by the link::Classes/ShutDown:: and link::Classes/OnError:: classes.

subsection:: PriorityQueue stable order

The link::Classes/PriorityQueue:: now provides a stable heap order: items of the same time value will have a FIFO order.

SECTION:: Server-side news

subsection:: Bitwise ops
The bitwise operators code::&:: (and), code::|:: (or), code:: xor: :: (xor), code::<<:: (left shift) and code::>>:: (right shift) are now supported server-side on audio and control signals. Example:
code::
// 8-bit magic
(
play {
    var t = PulseCount.ar(Impulse.ar(8e3));
    HPF.ar(
        (
            ((t * 15) & (t >> 5)) |
            ((t * 5)  & (t >> [3, 4])) |
            ((t * 2)  & (t >> 9)) |
            ((t * 8)  & (t >> 11))
            - 3 % 256
        ) / 127-1 * 3
        , 20
    ).tanh
}
)
::

subsection:: VarLag UGen
The new link::Classes/VarLag:: UGen provides the same functionality as Lag but with linear and other curves.

subsection:: DelTapWr/DelTapRd UGens
The new link::Classes/DelTapRd:: and link::Classes/DelTapWr:: UGen can be used to easily implement multitap delays.

subsection:: Node-onFree
A new method link::Classes/Node#-onFree:: runs a function when node finished playing.

subsection:: LocalIn initial value
link::Classes/LocalIn:: now has an input for initial value.

subsection:: Close buffers on free
teletype::/b_free:: also free's soundfile if open (like teletype::/b_close::)

subsection:: More done flags
link::Classes/Demand::, link::Classes/VDiskIn:: and link::Classes/DiskIn:: now sets done flag (to be used by link::Classes/Done:: or link::Classes/FreeSelfWhenDone::)


subsection:: Shared Memory Server Interface

A shared-memory interface to the server has been introduced. This allows scoping and synchronous control bus access
for local clients.

subsection:: HPF/RHPF internal precision

The recursive filter loop for link::Classes/HPF:: and link::Classes/RHPF:: has been changed to double-precision in
order to avoid quantization noise. Pieces that depend on the quantization noise can make use of the GlitchUGens provided in sc3-plugins, which implement the old behavior.

subsection:: New FFT Plugin API

A new FFT API for server plugins has been introduced: this simplifies writing FFT ugens in a cross-platform manner,
since no external FFT libraries are required.


subsection:: Supernova

A new multi-processor implementation of scsynth. Parallelism of the synthesis graph is exposed to the user via the
link::Classes/ParGroup:: class. Supernova is currently linux-only. It is not provided in the OSX/Windows binaries. In
order to play patterns inside a ParGroup, the link::Classes/PparGroup:: can be used. Scsynth emulates parallel groups
with groups.

Plugins have to be adapted by acquiring spinlocks when accessing busses or buffers. See link::Guides/WritingUGens:: for
details.
